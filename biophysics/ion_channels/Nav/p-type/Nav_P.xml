<?xml version="1.0" encoding="UTF-8"?>
<NineML xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://nineml.net/9ML/1.0"
  xsi:schemaLocation="http://nineml.incf.org/9ML/NineML_v0.3.xsd">
  <Dimension name="per_time" t="-1"/>
  <Dimension name="voltage" m="1" l="2" t="-3" i="-1"/>
  <Dimension name="per_time_voltage" m="-1" l="-2" t="2" i="1"/>
  <Dimension name="temperature" k="1"/>
  <Dimension name="conductanceDensity" m="-1" l="-4" t="3" i="2"/>
  <Dimension name="currentDensity" i="1" l="-2"/>
  <Dimension name="concentration" l="-3" n="1"/>
  <Dimension name="dimensionless"/>
  <Unit symbol="celsius" dimension="temperature" power="0" offset="273.15"/>
  <Unit symbol="K" dimension="temperature" power="0"/>
  <Unit symbol="unitless" dimension="dimensionless" power="0"/>
  <Dynamics name="Nav_P">
    <Parameter name="Aalpha_m" dimension="per_time_voltage"/>
    <Parameter name="Kalpha_m" dimension="voltage"/>
    <Parameter name="V0alpha_m" dimension="voltage"/>
    <Parameter name="Abeta_m" dimension="per_time_voltage"/>
    <Parameter name="Kbeta_m" dimension="voltage"/>
    <Parameter name="V0beta_m" dimension="voltage"/>
    <Parameter name="V0_minf" dimension="voltage"/>
    <Parameter name="B_minf" dimension="voltage"/>
    <Parameter name="gbar" dimension="conductanceDensity"/>
    <AnalogReceivePort name="temperature" dimension="temperature"/>
    <AnalogReceivePort name="v" dimension="voltage"/>
    <AnalogSendPort name="g" dimension="conductanceDensity"/>
    <StateVariable name="m" dimension="dimensionless">
      <Initial>1 / (1 + exp((-v + V0_minf) / B_minf))</Initial>
    </StateVariable>
    <Alias name="g">
      <MathInline>gbar * m</MathInline>
    </Alias>
    <Regime name="default">
      <TimeDerivative variable="m">
        <MathInline>(m_inf - m) / m_tau</MathInline>
      </TimeDerivative>
    </Regime>        
    <Alias name="m_inf">
      <MathInline>1 / (1 + exp((-v + V0_minf) / B_minf))</MathInline>
    </Alias>
    <Alias name="m_tau">
      <MathInline>(5 / (alpha_m + beta_m))</MathInline>
    </Alias>
    <Alias name="Q10">
      <MathInline>pow(3, ((temperature - reference_temperature) / ten_degrees))</MathInline>
    </Alias>
    <Alias name="alpha_m">
      <MathInline>Q10 * Aalpha_m * linoid_alpha</MathInline>
    </Alias>
    <Alias name="beta_m">
      <MathInline>Q10 * Abeta_m * linoid_beta</MathInline>
    </Alias>
    <Alias name="linoid_alpha_test">
      <MathInline>abs((v - V0alpha_m) / Kalpha_m)</MathInline>
    </Alias>
    <Alias name="linoid_alpha_bounded">
      <MathInline>Kalpha_m * (1 - ((v - V0alpha_m) / Kalpha_m) / 2)</MathInline>
    </Alias>            
    <Alias name="linoid_alpha_unbounded">
      <MathInline>(v - V0alpha_m) / (1 - exp((v - V0alpha_m) / Kalpha_m))</MathInline>
    </Alias>
    <Alias name="linoid_alpha">
      <MathInline>
        linoid_alpha_test &lt; linoid_voltage_bound ? linoid_alpha_bounded : linoid_alpha_unbounded
      </MathInline>
    </Alias>
    <Alias name="linoid_beta_test">
      <MathInline>abs((v - V0beta_m) / Kbeta_m)</MathInline>
    </Alias>
    <Alias name="linoid_beta_bounded">
      <MathInline>Kbeta_m * (1 - ((v - V0beta_m) / Kbeta_m) / 2)</MathInline>
    </Alias>            
    <Alias name="linoid_beta_unbounded">
      <MathInline>(v - V0beta_m) / (1 - exp((v - V0beta_m) / Kbeta_m))</MathInline>
    </Alias>
    <Alias name="linoid_beta">
      <MathInline>
        linoid_beta_test &lt; linoid_voltage_bound ? linoid_beta_bounded : linoid_beta_unbounded
      </MathInline>
    </Alias>
    <Constant name="linoid_voltage_bound" value="1e-6" units="unitless"/> 
    <Constant name="reference_temperature" value="30.0" units="celsius"/>
    <Constant name="ten_degrees" value="10" units="K"/>
  </Dynamics>
</NineML>
