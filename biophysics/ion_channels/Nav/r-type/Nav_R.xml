<?xml version="1.0" encoding="UTF-8"?>
<NineML xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://nineml.net/9ML/1.0"
  xsi:schemaLocation="http://nineml.incf.org/9ML/NineML_v0.3.xsd">
  <Dimension name="per_time" t="-1"/>
  <Dimension name="voltage" m="1" l="2" t="-3" i="-1"/>  
  <Dimension name="temperature" k="1"/>
  <Dimension name="conductanceDensity" m="-1" l="-4" t="3" i="2"/>
  <Dimension name="currentDensity" i="1" l="-2"/>
  <Dynamics name="Nav_R">
    <Parameter name="Aalpha_m" dimension="per_time"/>
    <Parameter name="V0alpha_m" dimension="voltage"/>
    <Parameter name="Kalpha_m" dimension="voltage"/>
    <Parameter name="Shiftalpha_m" dimension="per_time"/>
    <Parameter name="Abeta_m" dimension="per_time"/>
    <Parameter name="V0beta_m" dimension="voltage"/>
    <Parameter name="Kbeta_m" dimension="voltage"/>
    <Parameter name="Shiftbeta_m" dimension="per_time"/>
    <Parameter name="Aalpha_h" dimension="per_time"/>
    <Parameter name="V0alpha_h" dimension="voltage"/>
    <Parameter name="Kalpha_h" dimension="voltage"/>
    <Parameter name="Abeta_h" dimension="per_time"/>
    <Parameter name="V0beta_h" dimension="voltage"/>
    <Parameter name="Kbeta_h" dimension="voltage"/>
    <Parameter name="gbar" dimension="conductanceDensity"/>
    <AnalogReceivePort name="temperature" dimension="temperature"/>
    <AnalogReceivePort name="v" dimension="voltage"/>
    <AnalogSendPort name="g" dimension="conductanceDensity"/>
    
      <StateVariable name="m">
        <Initial>m_inf</Initial>
      </StateVariable>
      <StateVariable name="h">
        <Initial>h_inf</Initial>
      </StateVariable>
      <Regime>
        <TimeDerivative variable="m">
          <MathInline>(m_inf - m) / m_tau</MathInline>
        </TimeDerivative>
        <TimeDerivative variable="h">
          <MathInline>(h_inf - h) / h_tau</MathInline>
        </TimeDerivative>
      </Regime>
      <Alias name="g">
        <MathInline>gbar * m * h</MathInline>
      </Alias>
      <Alias name="Q10Denom">
        <Value units="degC">10.0</Value>
      </Alias>
      <Alias name="Q10">
        <MathInline>pow(3, (temperature - 20) / Q10Denom)</MathInline>
      </Alias>
      <Alias name="m_inf">
        <MathInline>alpha_m / (alpha_m + beta_m)</MathInline>
      </Alias>
      <Alias name="m_tau">
        <MathInline>1 / (alpha_m + beta_m)</MathInline>
      </Alias>
      <Alias name="h_inf">
        <MathInline>alpha_h / (alpha_h + beta_h</MathInline>
      </Alias>
      <Alias name="h_tau">
        <MathInline>1 / (alpha_h + beta_h)</MathInline>
      </Alias>
      <Alias name="alpha_m">
        <MathInline>
          Q10 * (Shiftalpha_m + 
          (Aalpha_m * (v + V0alpha_m)) / (exp((v + V0alpha_m) / Kalpha_m) - 1))
        </MathInline>
      </Alias>
      <Alias name="beta_m">
        <MathInline>
          Q10 * (Shiftbeta_m + Abeta_m * (v + V0beta_m) / (exp(boundedX) - 1))
        </MathInline>
      </Alias>
      <Alias name="x">
        <MathInline>(v + V0beta_m) / Kbeta_m</MathInline>
      </Alias>
      <Alias name="xBound">
        <Value>200.0</Value>
      </Alias>
      <Alias name="boundedX">
        <MathML  xmlns="http://www.w3.org/1998/Math/MathML">
          <piecewise>
            <piece>
              <cn>xBound</cn>
              <apply><gt/><ci>x</ci><ci>xBound</ci></apply>
            </piece>
            <otherwise>
              <ci>x</ci>
            </otherwise>
          </piecewise>
        </MathML>
      </Alias>
      <Alias name="alpha_h">
        <MathInline>
          Q10 * Aalpha_h * exp((v - V0alpha_h) / Kalpha_h)
        </MathInline>
      </Alias>
      <Alias name="beta_h">
        <MathInline>
          Q10 * Abeta_h * exp((v - V0beta_h) / Kbeta_h)
        </MathInline>
      </Alias>
    </Dynamics>
</NineML>
