<?xml version="1.0" encoding="UTF-8"?>
<NineML xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://nineml.net/9ML/1.0"
  xsi:schemaLocation="http://nineml.incf.org/9ML/NineML_v0.3.xsd">
  <Dimension name="per_time" t="-1"/>
  <Dimension name="voltage" m="1" l="2" t="-3" i="-1"/>  
  <Dimension name="temperature" k="1"/>
  <Dimension name="conductanceDensity" m="-1" l="-4" t="3" i="2"/>
  <Dimension name="currentDensity" i="1" l="-2"/>
  <Dimension name="concentration" l="-3" n="1"/>
  <Dimension name="dimensionless"/>
  <Dynamics name="Nav_P">
    <Parameter name="Aalpha_m" dimension="per_time"/>
    <Parameter name="Kalpha_m" dimension="voltage"/>
    <Parameter name="V0alpha_m" dimension="voltage"/>
    <Parameter name="Abeta_m" dimension="per_time"/>
    <Parameter name="Kbeta_m" dimension="voltage"/>
    <Parameter name="V0beta_m" dimension="voltage"/>
    <Parameter name="V0_minf" dimension="voltage"/>
    <Parameter name="B_minf" dimension="concentration"/>
    <Parameter name="gbar" dimension="conductanceDensity"/>
    <AnalogReceivePort name="temperature" dimension="temperature"/>
    <AnalogReceivePort name="v" dimension="voltage"/>
    <AnalogSendPort name="g" dimension="conductanceDensity"/>
    
      <StateVariable name="m" dimension="dimensionless">
        <Initial>(1 / (1 + exp((neg(v - V0_minf)) / B_minf)))</Initial>
      </StateVariable>
      <Alias name="g">
        <MathInline>gbar * m</MathInline>
      </Alias>
      <Regime name="default">
        <TimeDerivative variable="m">
          <MathInline>(m_inf - m) / m_tau</MathInline>
        </TimeDerivative>
      </Regime>        
      <Alias name="m_inf">
        <MathInline>(1 / (1 + exp((neg(v - V0_minf)) / B_minf)))</MathInline>
      </Alias>
      <Alias name="m_tau">
        <MathInline>(5 / (alpha_m + beta_m))</MathInline>
      </Alias>
      <Alias name="Q10">
        <MathInline>pow(3, ((temperature - 30) / 10))</MathInline>
      </Alias>
      <Alias name="alpha_m">
        <MathInline>Q10 * Aalpha_m * linoid((v - V0alpha_m)
          Kalpha_m)</MathInline>
      </Alias>
      <Alias name="beta_m">
        <MathInline>Q10 * Abeta_m * linoid((v - V0beta_m)
          Kbeta_m)</MathInline>
      </Alias>
      <Alias name="linoid_test">
        <MathInline>abs((v - V0alpha_m) / Kalpha_m)</MathInline>
      </Alias>
      <Alias name="linoid_bounded">
        <MathInline>Kalpha_m * (1 - ((v - V0alpha_m) / Kalpha_m) / 2)</MathInline>
      </Alias>            
      <Alias name="linoid_unbounded">
        <MathInline>(v - V0alpha_m) / (1 - exp((v - V0alpha_m) / Kalpha_m))</MathInline>
      </Alias>
      <Alias name="linoid_voltage_bound">
        <Value>1e-6</Value>
      </Alias>
      <Alias name="linoid">
        <MathML xmlns="http://www.w3.org/1998/Math/MathML">
          <piecewise>
            <piece>
              <ci>linoid_bounded</ci>
              <apply>
                <lt/>
                <ci>linoid_test</ci>
                <ci>linoid_voltage_bound</ci>
              </apply>
            </piece>
            <otherwise>
              <ci>linoid_unbounded</ci>
            </otherwise>
          </piecewise>
        </MathML>
      </Alias>
    </Dynamics>
</NineML>
